name: Ruby Gem CI

on:
  # Run tests on every push and pull request to the main branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Run the release process ONLY when you publish a new release in the GitHub UI
  release:
    types: [published]

jobs:
  # This job runs tests on pushes and pull requests
  test:
    # Don't run this test job if the trigger was a release
    if: github.event_name != 'release'
    name: Test on ${{ matrix.os }} / Ruby ${{ matrix.ruby }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest]
        ruby: ['2.7', '3.0', '3.1', '3.2', '3.3']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Compile and run tests
        run: bundle exec rake

  # This job builds and publishes the platform-specific gems when a release is published
  publish:
    name: Publish for ${{ matrix.os }}
    # Only run this job if the trigger was a release
    if: github.event_name == 'release'
    needs: test # Ensure tests pass before publishing
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # We build and publish for each of these platforms
        os: [ubuntu-latest, macos-13, macos-latest]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Use a recent Ruby for the release process
          bundler-cache: true
      - name: Compile native extension
        run: bundle exec rake compile
      - name: Build platform-specific gem
        run: gem build ru_token.gemspec
      - name: Publish to RubyGems
        env:
          # Make sure this secret is set in your repository settings
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
        run: |
          mkdir -p $HOME/.gem
          echo ":rubygems_api_key: $RUBYGEMS_API_KEY" > $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          gem push *.gem
