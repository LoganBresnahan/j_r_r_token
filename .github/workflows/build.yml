name: Ruby Gem CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [published]

jobs:
  # This job runs tests on standard glibc and macOS systems
  test:
    if: github.event_name != 'release'
    name: Test on ${{ matrix.os }} / Ruby ${{ matrix.ruby }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, ubuntu-22.04-arm]
        ruby: ['2.7', '3.0', '3.1', '3.2', '3.3']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Compile and run tests
        run: bundle exec rake

  test-musl:
    if: github.event_name != 'release'
    name: Test on Alpine / Ruby ${{ matrix.ruby }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: ['2.7', '3.0', '3.1', '3.2', '3.3']
    steps:
      - uses: actions/checkout@v4
      - name: Run tests inside Alpine container
        run: |
          docker run --rm -v "$PWD:/usr/src/app" -w /usr/src/app ruby:${{ matrix.ruby }}-alpine sh -c "\
            apk add --no-cache curl build-base git && \
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
            . \"\$HOME/.cargo/env\" && \
            rustup target add x86_64-unknown-linux-musl && \
            bundle install && \
            bundle exec rake"

  # This job builds and publishes the standard platform gems
  publish:
    name: Publish for ${{ matrix.os.name }}
    if: github.event_name == 'release'
    needs: [test, test-musl]
    runs-on: ${{ matrix.os.label }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - { name: 'Linux x86_64', label: 'ubuntu-latest' }
          - { name: 'Linux ARM64', label: 'ubuntu-22.04-arm' }
          - { name: 'macOS x86_64 (Intel)', label: 'macos-13' }
          - { name: 'macOS ARM64 (Apple Silicon)', label: 'macos-latest' }
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      - name: Compile native extension
        run: bundle exec rake compile
      - name: Build platform-specific gem
        run: gem build ru_token.gemspec
      - name: Publish to RubyGems
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
        run: |
          mkdir -p $HOME/.gem
          echo ":rubygems_api_key: $RUBYGEMS_API_KEY" > $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          gem push *.gem

  # This job builds and publishes the MUSL-specific gems
  publish-musl:
    name: Publish for Linux MUSL (${{ matrix.target }})
    if: github.event_name == 'release'
    needs: [test, test-musl]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-linux-musl, aarch64-linux-musl]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
      - name: Build with rake-compiler-dock
        run: |
          gem install rake-compiler-dock
          rcd gem --target ${{ matrix.target }}
      - name: Publish to RubyGems
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
        run: |
          mkdir -p $HOME/.gem
          echo ":rubygems_api_key: $RUBYGEMS_API_KEY" > $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          gem push pkg/*.gem
